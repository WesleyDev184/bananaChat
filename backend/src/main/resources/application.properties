spring.application.name=backend
# Configuração do Servidor
server.port=8080

# Configuração do Broker ActiveMQ
# Para ambiente local use: tcp://localhost:61616
# Para ambiente Docker, a variável de ambiente SPRING_ACTIVEMQ_BROKER_URL será usada
spring.activemq.broker-url=${SPRING_ACTIVEMQ_BROKER_URL:tcp://localhost:61616}
spring.activemq.user=${SPRING_ACTIVEMQ_USER:admin}
spring.activemq.password=${SPRING_ACTIVEMQ_PASSWORD:admin}

# Configuração de classes confiáveis para serialização
spring.activemq.packages.trusted=com.bananachat.backend.model

# Nome da fila/tópico para o chat
# Podemos definir aqui para usar no código
jms.chat.topic=chat.public.topic

# Configuração do Banco de Dados H2
# Para ambiente local usar configuração padrão
# Para ambiente Docker, as variáveis de ambiente serão usadas
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:h2:mem:chatdb}
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:sa}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}

# Configuração do JPA/Hibernate
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Configuração de Serialização JSON
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=America/Sao_Paulo
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss.SSS

# Console H2 (apenas para desenvolvimento)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console